% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-

%\VignetteIndexEntry{Sensitivity Analysis and Examples}
%\VignetteKeywords{mlegp}
%\VignetteDepends{mlegp,adapt}
%\VignettePackage{mlegp}

\section{Sensitivity Analysis}\label{sec:SA}
\subsection{Background}
For a response $y = f(x)$, where $x$ can be multidimensional, sensitivity analysis (SA) is used to (a) quantify the extent in which uncertainty in the response $y$ can be attributed to uncertainty in the design parameters $x$, and (b) characterize how the response changes as one or more design parameters are varied. General SA methods can be found in \citet{Saltelli2000}. We briefly describe SA using Gaussian process models, which is described in \citet{Schonlau2006}. 

For independent marginal priors on the components of $\theta$, the total variance of the GP predictor can be decomposed into variance contributions from main and higher order interaction effects, a technique known as Functional Analysis of Variance (FANOVA) decomposition. The percentage of the total functional variance accounted for by a particular effect provides a measure of the importance of that effect.

The main effect of parameter $\theta_k$, defined as $E[z(\theta)|z_{\mbox{\scriptsize known}}, \theta_k]$, predicts output for a fixed value of $\theta_k$, averaged over the remaining parameters according to a prior (or weight function) $\pi(\theta_{\mbox{-}k})$ on all components of $\theta$ except for the $k^{th}$.
The two-way interaction effect for parameters $\theta_ k$ and $\theta_l$, defined as
$E[z(\theta)|z_{\mbox{\scriptsize known}}, \theta_k, \theta_l]$, predicts output for jointly fixed values of $\theta_k$ and $\theta_l$, averaged over
the remaining parameters according to a prior $\pi(\theta_{\mbox{-}k,\mbox{-}l})$. Main effects plots and contour plots conveniently
illustrate main effects and two-factor interactions.

In {\it mlegp}, we implement FANOVA decomposition and the plotting of main and two-way factor interactions using indepedent uniform priors on all components of $\theta$. By default, the range of each component is taken to be the range of that component in the design matrix, but these ranges can be overwritten via the arguments \lq lower\rq and \lq upper\rq. 

\subsection{Examples}

\subsubsection{FANOVA decomposition}
The function {\it FANOVADecomposition} is used to perform FANOVA decomposition on a single Gaussian processes, or on (a subset) of all Gaussian processes in a list. The function returns a table that reports the \% contribution of each effect to the total functional variance of the Gaussian process predictor (or each Gaussian process predictor, in the case of a list). The code below demonstrates the use of the {\it FANOVADecomposition} function on a Gaussian process with two design parameters.
<<print=FALSE, echo = FALSE, results = hide>>=
library(mlegp)
@
<<print=TRUE, echo = TRUE, results = hide>>=
x1 = kronecker(seq(0,1,by=.25), rep(1,5))
x2 = rep(seq(0,1,by=.25),5)
y = 4*x1 - 2 * x2 + x1*x2
fit = mlegp(cbind(x1,x2), y, param.names = c("x1", "x2"))
@
<<print = TRUE, echo = TRUE, results = verbatim>>=
FANOVADecomposition(fit, verbose=F)
@
\subsubsection{Graphical plots for main and interaction effects}  
The function {\it plotMainEffects} is a generic function for plotting multiple main effects for a single Gaussian process; comparing a main effect across multiple Gaussian processes; and visualizing main effects of a single parameter on functional output. The first two uses of {\it plotMainEffects} are demonstrated below; an example of the latter can be found in Section (\ref{sec:SVD}).

First, we use {\it plotMainEffects} to plot the main effects for all input parameters on the Gaussian process created above. By default, all main effects are plotted, but a subset of effects can be specified by either name or number through the argument \lq effects\rq. Setting \lq FANOVA = TRUE\rq\ will calculate, for each main effect, the percentage contribution of that effect to the total functional variance of the GP predictor, and this will be reported in the legend. The function {\it plotInteractionEffect} is used to create a contour plot which visualizes interaction effects, and this is also demonstrated below. Output from the code can be seen in Figure (\ref{fig:SA1}).     
<<echo = TRUE, print = FALSE, eval=FALSE>>=
par(mfrow = c(1,2))
plotMainEffects(fit, graphStyle=1, FANOVA = TRUE)
plotInteractionEffect(fit, effects = c(1,2))
@
\begin{figure}[htbp]
  \begin{center}
<<fig=true, echo = FALSE, print = FALSE, results = hide>>=
par(mfrow = c(1,2))
plotMainEffects(fit, graphStyle=1, FANOVA = TRUE)
plotInteractionEffect(fit, effects = c(1,2))
@
    \caption{Main and Two-Way Interaction Effect Plots. For each main effect, the percent contribution of that effect to the total functional variance of the Gaussian process is also reported.}
    \label{fig:SA1}
  \end{center}
\end{figure}

It is also possible to use {\it plotMainEffects} to compare a main effect of a single parameter across multiple responses. We first create a Gaussian process list object that contains three GPs, each with the design parameter $x$. We then plot the main effect of $x$ on the three GPs. This example also illustrates how the main effect can be referred to by name instead of by number. The main effects plot produced by the code is displayed in Figure (\ref{fig:SA2}).

<<print=TRUE, echo=TRUE, results=hide, eval=TRUE>>=
x = -5:5
z1 = 10 - 5*x + rnorm(length(x))
z2 = 4 - 5*x + rnorm(length(x))
z3 = 7 * sin(x) + rnorm(length(x))
fitMulti = mlegp(x, cbind(z1,z2,z3), param.names = "x")
@

\begin{figure}[htbp]
  \begin{center}
<<fig=true, echo = TRUE>>=
plotMainEffects(fitMulti, effects = "x", graphStyle = 1)
@
    \caption{Main effects of the parameter $x$ on a Gaussian process list that models three responses.}
    \label{fig:SA2}
  \end{center}
\end{figure}


